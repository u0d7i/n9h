#!/bin/bash

# newguy - network observer and guesser

T=60 # default timeout, adjustable via options later
TS=$(date +%Y%m%d-%H%M%S) # timestamp


usage() {
    echo
    echo "usage: $0 [options] <interface>|<file>"
    echo "options:"
    echo " -n          don't parse, save only"
    echo " -t <time>   time in sec (default 60)"
    echo
    exit
}

# get options if any
while getopts "nt:" opt; do
    case $opt in
        n)
            SAVEONLY=1
            ;;
        t)
            T=$OPTARG
            ;;
        \?)
            usage
            ;;
    esac
done
shift $((OPTIND-1))

# usage if no args
[  $# -eq 0 ] && usage

# check if our argument is an interface or a file
if ip link show dev $1 > /dev/null 2>&1; then
    echo "-- capturing for ${T} seconds on $1 ..."
    FN="${TS}-${1}-${T}s.cap"
    timeout ${T} tcpdump -i $1 -w ${FN} -s0
    # older versions of timeout don't support
    # '--preserve-status', so, using dirty hack
    [ $? -eq 124 ] || exit
    echo "----------"
else
    FN=$1
    [ -e $FN ] || {
      echo "no such file or interface"
      exit
    }
fi

capinfos -csuaeix ${FN} || exit
echo "----------"

#we have a valid pcap file we can work with
# should we?
[[ $SAVEONLY ]] && exit

